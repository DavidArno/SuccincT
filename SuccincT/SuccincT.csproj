<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>10.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{23A68981-A42D-471D-AE34-3481D8551C1E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SuccincT</RootNamespace>
    <AssemblyName>SuccincT</AssemblyName>
    <ProjectTypeGuids>{786C830F-07A1-408B-BD7F-6EE04809D6DB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <TargetFrameworkProfile>Profile5</TargetFrameworkProfile>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DocumentationFile>
    </DocumentationFile>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>Code analysis rules as errors.ruleset</CodeAnalysisRuleSet>
    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>
    <NoWarn>1591,1658</NoWarn>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <DocumentationFile>
    </DocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <CodeAnalysisRuleSet>Code analysis rules as errors.ruleset</CodeAnalysisRuleSet>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>Always</RunPostBuildEvent>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.ValueTuple">
      <HintPath>..\packages\System.ValueTuple.4.3.0\lib\portable-net40+sl4+win8+wp8\System.ValueTuple.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="CompilationTargetHandler.cs" />
    <Compile Include="Functional\ActionExtensions.cs" />
    <Compile Include="Functional\IEnumerableExtensions.cs" />
    <Compile Include="Options\Success.cs" />
    <Compile Include="Options\Success{T}.cs" />
    <Compile Include="PatternMatchers\ITypeMatcher{T,TR}.cs" />
    <Compile Include="PatternMatchers\ITypeMatcherCaseHandler.cs" />
    <Compile Include="PatternMatchers\ITypeMatcherFuncPatternMatcherAfterElse.cs" />
    <Compile Include="PatternMatchers\ITypeMatcher{T}.cs" />
    <Compile Include="PatternMatchers\TypeMatcherCaseHandler.cs" />
    <Compile Include="PatternMatchers\TypeMatcherCaseOfData.cs" />
    <Compile Include="PatternMatchers\TypeMatcher{T}.cs" />
    <Compile Include="PatternMatchers\TypeMatcher{T,TR}.cs" />
    <Compile Include="Unions\Either.cs" />
    <Compile Include="Options\OptionExtensions.cs" />
    <Compile Include="Options\OptionExtensionsForDictionaryType.cs" />
    <Compile Include="Options\OptionExtensionsForGeneralTypes.cs" />
    <Compile Include="PatternMatchers\Any.cs" />
    <Compile Include="Functional\ConsEnumerable.cs" />
    <Compile Include="Functional\ConsListBuilderEnumerator.cs" />
    <Compile Include="Functional\ConsNode.cs" />
    <Compile Include="Functional\ConsNodeEnumerator.cs" />
    <Compile Include="Functional\ConsNodeState.cs" />
    <Compile Include="Functional\ConsResult.cs" />
    <Compile Include="Functional\IConsEnumerable.cs" />
    <Compile Include="Functional\PartialFunctionApplications.cs" />
    <Compile Include="Functional\PipeExtensions.cs" />
    <Compile Include="Functional\RepeatingEnumerations.cs" />
    <Compile Include="Functional\TailActionApplications.cs" />
    <Compile Include="Functional\TailFunctionApplications.cs" />
    <Compile Include="Functional\TypedLambdas.cs" />
    <Compile Include="Functional\Unit.cs" />
    <Compile Include="Options\INoneFuncMatchHandler.cs" />
    <Compile Include="Options\IOptionActionMatcher.cs" />
    <Compile Include="Options\IOptionFuncMatcher.cs" />
    <Compile Include="Options\IValueOrErrorActionMatcher.cs" />
    <Compile Include="Options\IValueOrErrorFuncMatcher.cs" />
    <Compile Include="Options\OptionExtensionsForIEnumerable.cs" />
    <Compile Include="Options\Maybe{T}.cs" />
    <Compile Include="GlobalSuppressions.cs" />
    <Compile Include="Parsers\BooleanParser.cs" />
    <Compile Include="Parsers\EnumParser.cs" />
    <Compile Include="Parsers\FloatParsers.cs" />
    <Compile Include="Parsers\IntParsers.cs" />
    <Compile Include="Options\INoneActionMatchHandler.cs" />
    <Compile Include="Options\OptionMatcher{T,TR}.cs" />
    <Compile Include="Options\ValueOrError.cs" />
    <Compile Include="Options\ValueOrErrorMatcher{TR}.cs" />
    <Compile Include="PatternMatchers\EitherTuple.cs" />
    <Compile Include="PatternMatchers\EitherTuple{T1,T2,T3,T4}.cs" />
    <Compile Include="PatternMatchers\EitherTuple{T1,T2,T3}.cs" />
    <Compile Include="PatternMatchers\EitherTuple{T1,T2}.cs" />
    <Compile Include="PatternMatchers\GeneralMatcher\GeneralMatcherExtensions.cs" />
    <Compile Include="PatternMatchers\IActionMatcherAfterElse.cs" />
    <Compile Include="PatternMatchers\IActionMatcher{T1,T2,T3,T4}.cs" />
    <Compile Include="PatternMatchers\IActionMatcher{T1,T2,T3}.cs" />
    <Compile Include="PatternMatchers\IActionMatcher{T1,T2}.cs" />
    <Compile Include="PatternMatchers\IActionMatcher{T1}.cs" />
    <Compile Include="PatternMatchers\IActionWhereHandler{TM,T1,T2,T3,T4}.cs" />
    <Compile Include="PatternMatchers\IActionWhereHandler{TM,T1,T2,T3}.cs" />
    <Compile Include="PatternMatchers\IActionWhereHandler{TM,T1,T2}.cs" />
    <Compile Include="PatternMatchers\IActionWithHandler{TM,T1,T2,T3,T4}.cs" />
    <Compile Include="PatternMatchers\IActionWithHandler{TM,T1,T2,T3}.cs" />
    <Compile Include="PatternMatchers\IActionWithHandler{TM,T1,T2}.cs" />
    <Compile Include="PatternMatchers\IFuncMatcher{T1,T2,T3,T4,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncMatcher{T1,T2,T3,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncMatcher{T1,T2,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWhereHandler{TM,T1,T2,T3,T4,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWhereHandler{TM,T1,T2,T3,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWhereHandler{TM,T1,T2,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWithHandler{TM,T1,T2,T3,T4,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWithHandler{TM,T1,T2,T3,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncWithHandler{TM,T1,T2,TR}.cs" />
    <Compile Include="PatternMatchers\IMatcher{T1,T2,T3,T4}.cs" />
    <Compile Include="PatternMatchers\IMatcher{T1,T2,T3}.cs" />
    <Compile Include="PatternMatchers\IMatcher{T1,T2}.cs" />
    <Compile Include="PatternMatchers\IMatcher{T1}.cs" />
    <Compile Include="PatternMatchers\Matcher{T1,T2,T3,T4,TR}.cs" />
    <Compile Include="PatternMatchers\Matcher{T1,T2,T3,TR}.cs" />
    <Compile Include="PatternMatchers\MatchFunctionSelectorData.cs" />
    <Compile Include="PatternMatchers\IFuncMatcherAfterElse{TR}.cs" />
    <Compile Include="PatternMatchers\Matcher{T1,T2,TR}.cs" />
    <Compile Include="PatternMatchers\IFuncMatcher{T1,TR}.cs" />
    <Compile Include="PatternMatchers\Matcher{T1.TR}.cs" />
    <Compile Include="PatternMatchers\MatchFunctionSelector.cs" />
    <Compile Include="PatternMatchers\SpecificTypeMatcherExtensions.cs" />
    <Compile Include="PatternMatchers\IFuncWithHandler{TM,T1,TR}.cs" />
    <Compile Include="PatternMatchers\IActionWithHandler{TM,T1}.cs" />
    <Compile Include="PatternMatchers\IFuncWhereHandler{TM,T1,TR}.cs" />
    <Compile Include="PatternMatchers\IActionWhereHandler{TM,T1}.cs" />
    <Compile Include="PatternMatchers\NoMatchException.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Options\Option{T}.cs" />
    <Compile Include="Tuples\ITupleMatchable{T1,T2,T3,T4}.cs" />
    <Compile Include="Tuples\ITupleMatchable{T1,T2,T3}.cs" />
    <Compile Include="Tuples\ITupleMatchable{T1,T2}.cs" />
    <Compile Include="Unions\InvalidCaseOfTypeException.cs" />
    <Compile Include="Unions\InvalidCaseException.cs" />
    <Compile Include="Unions\IUnion.cs" />
    <Compile Include="Unions\IUnionCreator{T1,T2,T3,T4}.cs" />
    <Compile Include="Unions\IUnionCreator{T1,T2,T3}.cs" />
    <Compile Include="Unions\IUnionCreator{T1,T2}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionActionPatternMatcher{T1,T2,T3,T4}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionActionPatternMatcherAfterElse.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionActionPatternCaseHandler.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionFuncPatternMatcher{T1,T2,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionFuncPatternCaseHandler.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionFuncPatternMatcher{T1,T2,T3,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionActionPatternMatcher{T1,T2,T3}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionFuncPatternMatcher{T1,T2,T3,T4,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\MatchSelectorsCreator.cs" />
    <Compile Include="Unions\PatternMatchers\MatchSelectorsForCases.cs" />
    <Compile Include="Unions\PatternMatchers\UnionPatternMatcher{T1,T2,T3,T4,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\UnionPatternCaseHandler{TM,T,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionFuncPatternMatcherAfterElse.cs" />
    <Compile Include="Unions\PatternMatchers\UnionPatternMatcher{T1,T2,T3,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\UnionPatternMatcher{T1,T2,TR}.cs" />
    <Compile Include="Unions\PatternMatchers\IUnionActionPatternMatcher{T1,T2}.cs" />
    <Compile Include="Unions\Union.cs" />
    <Compile Include="Unions\UnionCreator{T1,T2,T3,T4}.cs" />
    <Compile Include="Unions\UnionCreator{T1,T2,T3}.cs" />
    <Compile Include="Unions\UnionCreator{T1,T2}.cs" />
    <Compile Include="Unions\Union{T1,T2,T3}.cs" />
    <Compile Include="Unions\Union{T1,T2,T3,T4}.cs" />
    <Compile Include="Unions\None.cs" />
    <Compile Include="Unions\Union{T1,T2}.cs" />
    <Compile Include="Unions\Variant.cs" />
    <Compile Include="Version.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Code analysis rules as errors.ruleset" />
    <None Include="post-build.bat" />
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="CustomDictionary.xml" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <PropertyGroup>
    <PostBuildEvent>if not [%25MKLINK%25] == [] goto mklinkset
set MKLINK=mklink
:mklinkset

if not exist "$(SolutionDir)SuccincT.Core\Functional" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\Functional" "$(SolutionDir)SuccincT\Functional"
if not exist "$(SolutionDir)SuccincT.Core\Options" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\Options" "$(SolutionDir)SuccincT\Options"
if not exist "$(SolutionDir)SuccincT.Core\Parsers" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\Parsers" "$(SolutionDir)SuccincT\Parsers"
if not exist "$(SolutionDir)SuccincT.Core\PatternMatchers" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\PatternMatchers" "$(SolutionDir)SuccincT\PatternMatchers"
if not exist "$(SolutionDir)SuccincT.Core\Tuples" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\Tuples" "$(SolutionDir)SuccincT\Tuples"
if not exist "$(SolutionDir)SuccincT.Core\Unions" %25MKLINK%25 /D "$(SolutionDir)SuccincT.Core\Unions" "$(SolutionDir)SuccincT\Unions"

if not exist "$(SolutionDir)SuccincT.Core\CompilationTargetHandler.cs" %25MKLINK%25 "$(SolutionDir)SuccincT.Core\CompilationTargetHandler.cs" "$(SolutionDir)SuccincT\CompilationTargetHandler.cs"
if not exist "$(SolutionDir)SuccincT.Core\Version.cs" %25MKLINK%25 "$(SolutionDir)SuccincT.Core\Version.cs" "$(SolutionDir)SuccincT\Version.cs"</PostBuildEvent>
  </PropertyGroup>
</Project>